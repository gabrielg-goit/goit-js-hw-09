{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAGP,IAAMQ,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAcH,SAASC,cAAc,sBACrCG,EAAaJ,SAASC,cAAc,wBAE1CF,EAAKM,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAMF,IALA,IAAMC,EAAaC,SAASP,EAAWQ,OACjCC,EAAYF,SAASN,EAAYO,OACjCE,EAASH,SAASL,EAAWM,OAE7BG,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAAMxB,EAAWwB,EAAI,EACfvB,EAAQiB,EAAaM,EAAIH,EAC/BE,EAASE,KAAK1B,EAAcC,EAAUC,G,CAGxCsB,EAASG,SAAQ,SAAAC,GACfA,EACGC,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAGjDiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nconst firstInput = document.querySelector('input[name=\"delay\"]');\nconst secondInput = document.querySelector('input[name=\"step\"]');\nconst thirdInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const firstDelay = parseInt(firstInput.value);\n  const delayStep = parseInt(secondInput.value);\n  const amount = parseInt(thirdInput.value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delayStep;\n    promises.push(createPromise(position, delay));\n  }\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  });\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstInput","$ce04d3a99e08e73b$var$secondInput","$ce04d3a99e08e73b$var$thirdInput","addEventListener","e","preventDefault","firstDelay","parseInt","value","delayStep","amount","promises","i","push","forEach","promise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c503ef3a.js.map"}