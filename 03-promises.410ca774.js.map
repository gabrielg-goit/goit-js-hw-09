{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGb,MAAMQ,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAcH,SAASC,cAAc,sBACrCG,EAAaJ,SAASC,cAAc,wBAE1CF,EAAKM,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMC,EAAaC,SAASP,EAAWQ,OACjCC,EAAYF,SAASN,EAAYO,OACjCE,EAASH,SAASL,EAAWM,OAE7BG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MAAMxB,EAAWwB,EAAI,EACfvB,EAAQiB,EAAaM,EAAIH,EAC/BE,EAASE,KAAK1B,EAAcC,EAAUC,G,CAGxCsB,EAASG,SAAQC,IACfA,EACGC,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAqB/B,QAAiBC,MAAU,IAGnD+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,EAAAhC,GAASiC,OAAOG,QACd,sBAAoBjC,QAAeC,MAAU,GAE/C,GACJ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nconst firstInput = document.querySelector('input[name=\"delay\"]');\nconst secondInput = document.querySelector('input[name=\"step\"]');\nconst thirdInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const firstDelay = parseInt(firstInput.value);\n  const delayStep = parseInt(secondInput.value);\n  const amount = parseInt(thirdInput.value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delayStep;\n    promises.push(createPromise(position, delay));\n  }\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  });\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstInput","$47d4ff9957288465$var$secondInput","$47d4ff9957288465$var$thirdInput","addEventListener","e","preventDefault","firstDelay","parseInt","value","delayStep","amount","promises","i","push","forEach","promise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.410ca774.js.map"}